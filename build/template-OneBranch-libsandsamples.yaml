# template-OneBranch-PR-libsandsamples.yaml
# Performs Nuget Restore and Build of LibsAndSamples.sln based on BuildPlatform and BuildConfiguration

parameters:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'release'
  MsalClientSemVer: '4.0.0-devopsbuild'
  MsalSourceDir: 'microsoft-authentication-library-for-dotnet\' #Default MSAL Location
  Solution: 'LibsAndSamples.sln'

steps:
# - task: CmdLine@2
#   displayName: 'Clear local NuGet cache'
#   inputs:
#     script: 'nuget locals all -clear'

- powershell: 'powershell.exe -File "$(MsalSourceDir)build\InstallAndroid.ps1" -ExecutionPolicy Bypass'
  displayName: 'Install Android'

- template: /SharedComponents/OneBranch/Steps/Prepare.MSBuild.yml@templates
  parameters:
    msBuildVersion: 17.3
    msbuildInstallationPath: c:\.vs
    includeReferenceAssemblies: 'true'

# Unit tests require .NET 3.x
- task: UseDotNet@2
  displayName: 'Use .Net Core SDK 3.x'
  inputs:
    version: 3.x


# Use the latest .NET SDK
- task: UseDotNet@2
  displayName: 'Install .NET 5 SDK'
  inputs:
    version: 5.x
    performMultiLevelLookup: true

# Use the latest .NET SDK
- task: UseDotNet@2
  displayName: 'Install .NET 6 SDK'
  inputs:
    version: 6.x
    performMultiLevelLookup: true

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 6.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: CmdLine@2
  displayName: 'dotnet clear'
  inputs:
    script: 'dotnet nuget locals all --clear' 

- task: PowerShell@2
  displayName: 'Install .NET 6 and MAUI workload'
  inputs:
    targetType: 'inline'
    script: |
      dotnet workload install maui-windows;

- task: CmdLine@2
  displayName: 'dotnet install other workloads'
  inputs:
    script: 'dotnet workload install android ios maccatalyst tvos macos maui wasm-tools --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json' 

# - task: Bash@3
#   displayName: Install MAUI
#   inputs:
#     targetType: 'inline'
#     script: |
#       dotnet nuget locals all --clear 
#       dotnet workload install maui --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json
#       dotnet workload install android ios maccatalyst tvos macos maui wasm-tools --source https://aka.ms/dotnet6/nuget/index.json --source https://api.nuget.org/v3/index.json

#- task: DotNetCoreCLI@2
#  displayName: 'dotnet workload restore for Identity.Client'
#  inputs:
#    command: 'custom'
#    custom: 'workload'
#    arguments: 'restore $(MsalSourceDir)src\client\Microsoft.Identity.Client\Microsoft.Identity.Client.csproj'
    
- task: DotNetCoreCLI@2
  displayName: 'Restore solution ${{ parameters.Solution }}'
  inputs:
    command: 'restore'
    projects: '${{ parameters.Solution }}'
    
- task: VSBuild@1
  displayName: 'Build solution ${{ parameters.Solution }}'
  inputs:
    solution: ${{ parameters.Solution }}
    msbuildArgs: '/p:RunCodeAnalysis=false /p:MsalClientSemVer=${{ parameters.MsalClientSemVer }} /p:SourceLinkCreate=true /p:ContinousIntegrationBuild=true'
    platform: ${{ parameters.BuildPlatform }}
    configuration: ${{ parameters.BuildConfiguration }}

#- task: DotNetCoreCLI@2
#  displayName: 'dotnet workload restore'
#  inputs:
#    command: 'custom'
#    custom: 'workload'
#    arguments: 'restore $(MsalSourceDir)src\client\Microsoft.Identity.Client.Desktop\Microsoft.Identity.Client.Desktop.csproj'

# this cannot find iOS
# - task: VSBuild@1
#   displayName: 'NuGet restore ${{ parameters.Solution }}'
#   inputs:
#     solution: ${{ parameters.Solution }}
#     msbuildArgs: '-restore'
#     platform: ${{ parameters.BuildPlatform }}
#     configuration: ${{ parameters.BuildConfiguration }}

# Run Post-build code analysis (e.g. Roslyn)
- template: template-postbuild-code-analysis.yaml

- template: template-pack-and-sign-all-nugets.yaml

# Publish analysis and cleanup
- template: template-publish-analysis-and-cleanup.yaml
