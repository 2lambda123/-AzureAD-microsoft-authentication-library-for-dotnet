
# Release build for -netonly package should be triggered after the normal release build
trigger: none
pr: none

variables:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'release'
  ProjectPath: '$(Build.SourcesDirectory)\src\client\Microsoft.Identity.Client\Microsoft.Identity.Client.csproj'
  MsalClientSemVer: '4.0.0-devopsbuild'

stages:
- stage: MsalNetOnly
  jobs:

  - job: 'BuildPackSign'
    pool:
      vmImage: 'windows-2022'
      demands:
      - msbuild
      - visualstudio

    steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use latest NuGet'
      inputs:
        versionSpec: 6.x

    - task: UseDotNet@2
      displayName: 'Use .Net Core SDK 6.x'
      inputs:
        version: 6.x

    - task: CmdLine@2
      displayName: 'Clear local NuGet cache'
      inputs:
        script: 'nuget locals all -clear'

    - template: template-prebuild-code-analysis.yaml

    - task: VSBuild@1
      displayName: 'Build $(ProjectPath)'
      inputs:
        solution: $(ProjectPath)
        msbuildArgs: '/p:RunCodeAnalysis=false /p:MsalClientSemVer=$(parameters.MsalClientSemVer) /p:SourceLinkCreate=true /p:ContinousIntegrationBuild=true /p:NET_ONLY_INTERNAL_PACKAGE=true'
        platform: ${{ variables.BuildPlatform }}
        configuration: ${{ variables.BuildConfiguration }}
        maximumCpuCount: true

    - template: template-pack-and-sign-nuget.yaml
      parameters:
        BuildConfiguration: ${{ variables.BuildConfiguration }}
        ProjectRootPath: '$(Build.SourcesDirectory)\src\client\Microsoft.Identity.Client'
        AssemblyName: 'Microsoft.Identity.Client'

    - task: CmdLine@2
      displayName: 'Verify packages are signed'
      inputs:
        script: 'dotnet nuget verify $(Build.ArtifactStagingDirectory)\packages\*.nupkg'

    - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
      displayName: 'Get Software Bill Of Materials (SBOM)'
      inputs:
        BuildDropPath: '$(Build.ArtifactStagingDirectory)\packages'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact: packages'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)\packages'
        artifactName: packages
