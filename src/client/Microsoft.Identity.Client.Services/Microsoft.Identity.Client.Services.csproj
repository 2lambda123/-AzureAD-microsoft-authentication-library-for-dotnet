<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworkNetStandard>netstandard2.0</TargetFrameworkNetStandard>
    <TargetFrameworkNetDesktop45 Condition="$([MSBuild]::IsOsPlatform('Windows'))">net45</TargetFrameworkNetDesktop45>
    <TargetFrameworkNetDesktop461 Condition="$([MSBuild]::IsOsPlatform('Windows'))">net461</TargetFrameworkNetDesktop461>
    <TargetFrameworkNet6>net6</TargetFrameworkNet6>
    <TargetFrameworks>$(TargetFrameworkNet6);$(TargetFrameworkNetStandard);$(TargetFrameworkNetDesktop45);$(TargetFrameworkNetDesktop461)</TargetFrameworks>

    <Configurations>Debug;Release</Configurations>
    <PlatformTarget>AnyCPU</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Label="NuGet and AssemblyInfo metadata">
    <!--This should be passed from the VSTS build-->
    <MsalClientSemVer Condition="'$(MsalClientSemVer)' == ''">4.46.0</MsalClientSemVer>
    <!--This will generate AssemblyVersion, AssemblyFileVersion and AssemblyInformationVersion-->
    <Version>$(MsalClientSemVer)</Version>
    <!-- Copyright needs to be in the form of © not (c) to be compliant -->
    <Title>MSAL.NET for confidential client support</Title>
    <Copyright>© Microsoft Corporation. All rights reserved.</Copyright>
    <Company>Microsoft Corporation</Company>
    <Authors>Microsoft</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://go.microsoft.com/fwlink/?linkid=844761</PackageProjectUrl>
    <PackageReleaseNotes>The release notes are available at https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/releases and the roadmap at https://github.com/AzureAD/microsoft-authentication-library-for-dotnet/wiki#roadmap. To provide feedback, fill-in the survey at https://ncv.microsoft.com/JrXkdySi0m. </PackageReleaseNotes>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Description>
      This package contains binaries needed for web service scenarios like web apps, web APIs, and web jobs. It contains confidential client flows (client credentials, on behalf of etc.) and token cache serialization.
    </Description>
    <PackageTags>Microsoft Authentication Library Desktop MSAL Services Web App Web API Daemon Confidential Credentials OBO</PackageTags>
    <Copyright>© Microsoft Corporation. All rights reserved.</Copyright>
    <Company>Microsoft Corporation</Company>
    <Product>Microsoft Authentication Library Confidential Client</Product>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- Build symbol package (.snupkg) to distribute the PDB containing Source Link -->
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <IsPackable>true</IsPackable>
    <ContinuousIntegrationBuild Condition="'$(TF_BUILD)' == 'true'">true</ContinuousIntegrationBuild>
    <LangVersion>latest</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup>
    <PathToMsalSources>$(MSBuildThisFileDirectory)\..\Microsoft.Identity.Client</PathToMsalSources>
    <!-- Need to include / exclude / remove cs files manually so that they are present in both assemblies -->
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <NoWarn>$(NoWarn);NU5131;NETSDK1138</NoWarn>
  </PropertyGroup>

  <Import Project="../../../build/platform_and_feature_flags.props" />

  <PropertyGroup Condition="'$(TargetFramework)' == '$(TargetFrameworkNet6)'">
    <!-- On net6 we use a System.Text.Json for json operations, which is faster and does not use reflection-->
    <IsTrimmable>true</IsTrimmable>
    <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
  </PropertyGroup>

  <!-- Newtonsoft JSON.NET constants -->
  <PropertyGroup Condition="'$(TargetFramework)' == '$(TargetFrameworkNetDesktop45)' or '$(TargetFramework)' == '$(TargetFrameworkNetDesktop461)'">
    <DefineConstants>$(DefineConstants);HAVE_ADO_NET;HAVE_APP_DOMAIN;HAVE_ASYNC;HAVE_BIG_INTEGER;HAVE_BINARY_FORMATTER;HAVE_BINARY_SERIALIZATION;HAVE_BINARY_EXCEPTION_SERIALIZATION;HAVE_CHAR_TO_LOWER_WITH_CULTURE;HAVE_CHAR_TO_STRING_WITH_CULTURE;HAVE_COM_ATTRIBUTES;HAVE_COMPONENT_MODEL;HAVE_CONCURRENT_COLLECTIONS;HAVE_COVARIANT_GENERICS;HAVE_DATA_CONTRACTS;HAVE_DATE_TIME_OFFSET;HAVE_DB_NULL_TYPE_CODE;HAVE_DYNAMIC;HAVE_EMPTY_TYPES;HAVE_ENTITY_FRAMEWORK;HAVE_EXPRESSIONS;HAVE_FAST_REVERSE;HAVE_FSHARP_TYPES;HAVE_FULL_REFLECTION;HAVE_GUID_TRY_PARSE;HAVE_HASH_SET;HAVE_ICLONEABLE;HAVE_ICONVERTIBLE;HAVE_IGNORE_DATA_MEMBER_ATTRIBUTE;HAVE_INOTIFY_COLLECTION_CHANGED;HAVE_INOTIFY_PROPERTY_CHANGING;HAVE_ISET;HAVE_LINQ;HAVE_MEMORY_BARRIER;HAVE_METHOD_IMPL_ATTRIBUTE;HAVE_NON_SERIALIZED_ATTRIBUTE;HAVE_READ_ONLY_COLLECTIONS;HAVE_REFLECTION_EMIT;HAVE_SECURITY_SAFE_CRITICAL_ATTRIBUTE;HAVE_SERIALIZATION_BINDER_BIND_TO_NAME;HAVE_STREAM_READER_WRITER_CLOSE;HAVE_STRING_JOIN_WITH_ENUMERABLE;HAVE_TIME_SPAN_PARSE_WITH_CULTURE;HAVE_TIME_SPAN_TO_STRING_WITH_CULTURE;HAVE_TIME_ZONE_INFO;HAVE_TRACE_WRITER;HAVE_TYPE_DESCRIPTOR;HAVE_UNICODE_SURROGATE_DETECTION;HAVE_VARIANT_TYPE_PARAMETERS;HAVE_VERSION_TRY_PARSE;HAVE_XLINQ;HAVE_XML_DOCUMENT;HAVE_XML_DOCUMENT_TYPE;HAVE_CONCURRENT_DICTIONARY;$(AdditionalConstants)
    </DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(TargetFramework)' == '$(TargetFrameworkNetStandard)'">
    <DefineConstants>$(DefineConstants);UNITY;NETSTANDARD2_0;HAVE_ADO_NET;HAVE_APP_DOMAIN;HAVE_ASYNC;HAVE_BIG_INTEGER;HAVE_BINARY_FORMATTER;HAVE_BINARY_SERIALIZATION;HAVE_BINARY_EXCEPTION_SERIALIZATION;HAVE_CHAR_TO_LOWER_WITH_CULTURE;HAVE_CHAR_TO_STRING_WITH_CULTURE;HAVE_COM_ATTRIBUTES;HAVE_COMPONENT_MODEL;HAVE_CONCURRENT_COLLECTIONS;HAVE_COVARIANT_GENERICS;HAVE_DATA_CONTRACTS;HAVE_DATE_TIME_OFFSET;HAVE_DB_NULL_TYPE_CODE;HAVE_DYNAMIC;HAVE_EMPTY_TYPES;HAVE_ENTITY_FRAMEWORK;HAVE_EXPRESSIONS;HAVE_FAST_REVERSE;HAVE_FSHARP_TYPES;HAVE_FULL_REFLECTION;HAVE_GUID_TRY_PARSE;HAVE_HASH_SET;HAVE_ICLONEABLE;HAVE_ICONVERTIBLE;HAVE_IGNORE_DATA_MEMBER_ATTRIBUTE;HAVE_INOTIFY_COLLECTION_CHANGED;HAVE_INOTIFY_PROPERTY_CHANGING;HAVE_ISET;HAVE_LINQ;HAVE_MEMORY_BARRIER;HAVE_METHOD_IMPL_ATTRIBUTE;HAVE_NON_SERIALIZED_ATTRIBUTE;HAVE_READ_ONLY_COLLECTIONS;HAVE_SECURITY_SAFE_CRITICAL_ATTRIBUTE;HAVE_SERIALIZATION_BINDER_BIND_TO_NAME;HAVE_STREAM_READER_WRITER_CLOSE;HAVE_STRING_JOIN_WITH_ENUMERABLE;HAVE_TIME_SPAN_PARSE_WITH_CULTURE;HAVE_TIME_SPAN_TO_STRING_WITH_CULTURE;HAVE_TIME_ZONE_INFO;HAVE_TRACE_WRITER;HAVE_TYPE_DESCRIPTOR;HAVE_UNICODE_SURROGATE_DETECTION;HAVE_VARIANT_TYPE_PARAMETERS;HAVE_VERSION_TRY_PARSE;HAVE_XLINQ;HAVE_XML_DOCUMENT;HAVE_XML_DOCUMENT_TYPE;HAVE_CONCURRENT_DICTIONARY;HAVE_REGEX_TIMEOUTS;$(AdditionalConstants)
    </DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <!-- This None is here so the conditionally included files show up in the Solution Explorer -->
    <None Include="$(MSBuildThisFileDirectory)\**\*.cs;$(MSBuildThisFileDirectory)\**\*.xml;$(MSBuildThisFileDirectory)\**\*.axml" Exclude="$(MSBuildThisFileDirectory)\obj\**\*.*;$(MSBuildThisFileDirectory)\bin\**\*.*" />
    <!-- Manually include the cs files -->
    <Compile Include="$(MSBuildThisFileDirectory)\**\*.cs" Exclude="$(MSBuildThisFileDirectory)\obj\**\*.*" />
    <Compile Remove="$(MSBuildThisFileDirectory)\Platforms\**\*.*;$(MSBuildThisFileDirectory)\Resources\*.cs" />
    <Compile Remove="$(MSBuildThisFileDirectory)\PlatformsCommon\PlatformNotSupported\ApiConfig\SystemWebViewOptions.cs" />
    
    <PackageReference Include="Microsoft.IdentityModel.Abstractions" Version="6.22.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == '$(TargetFrameworkNetStandard)'">
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\netcore\**\*.cs" LinkBase="Platforms\netcore" />
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\netstandard\**\*.cs" LinkBase="Platforms\netstandard" />
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\Features\DesktopOS\**\*.cs" />
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\Features\DefaultOSBrowser\**\*.cs" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == '$(TargetFrameworkNet6)'">
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\netcore\**\*.cs" LinkBase="Platforms\netcore" />
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\net6\**\*.cs" LinkBase="Platforms\net6" />
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\Features\DefaultOSBrowser\**\*.cs" />
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\Features\DesktopOS\**\*.cs" />

    <!--System.Text.Json replaces internal NewtonSoft for NET 6-->
    <Compile Remove="$(MSBuildThisFileDirectory)\json\**\*.*" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == '$(TargetFrameworkNetDesktop45)' ">
    <Compile Remove="$(MSBuildThisFileDirectory)\PlatformsCommon\Shared\CommonCryptographyManager.cs" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == '$(TargetFrameworkNetDesktop45)' Or '$(TargetFramework)' == '$(TargetFrameworkNetDesktop461)' ">
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\netdesktop\**\*.cs" LinkBase="Platforms\netdesktop" />
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\Features\DefaultOSBrowser\**\*.cs" />
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\Features\WinFormsLegacyWebUi\**\*.cs" />
    <Compile Include="$(MSBuildThisFileDirectory)\Platforms\Features\DesktopOS\**\*.cs" />

    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Drawing" />
    <Reference Include="System.IdentityModel" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>

  <ItemGroup Label="Build Tools" Condition="$([MSBuild]::IsOsPlatform('Windows'))">
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
  </ItemGroup>

</Project>